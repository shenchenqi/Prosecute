apply plugin: 'com.android.application'

def getVersionName = { ->
    try {
        //打包时间
        def createTime = new Date().format("YYYYMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
        def buildType
        for (String s : gradle.startParameter.taskNames) {
            if (s.contains("Release") | s.contains("release")) {
                buildType = "release"
            } else if (s.contains("Debug") | s.contains("debug")) {
                buildType = "debug"
            }
        }
        def stdout = build_versions.version_name + "-" + buildType + "-" + createTime
        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.micro.prosecute"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName getVersionName()
    }
    //添加签名文件
    signingConfigs {
        release {
            storeFile file("prosecute.jks")
            storePassword "123456"
            keyAlias "prosecute"
            keyPassword "123456"
        }
        debug {
            storeFile file('prosecute.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'prosecute'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    sourceSets {
        main {
            if (isDebug.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            output ->
                def outputFile = outputFileName
                if (outputFile != null && outputFile.endsWith('.apk')) {
                    // app包名称
                    outputFileName = "prosecute-v" + defaultConfig.versionName + ".apk"
                }
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(path: ':root')
    implementation project(path: ':network')
    implementation project(path: ':hook')
    implementation project(path: ':rom')
    implementation project(path: ':tremolo')
}
